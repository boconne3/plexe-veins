[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

ned-path = .
network = Highway

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 120 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "org.car2x.veins.modules.application.platooning.PlatoonCar"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = false

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].unicast.rng-0 = 1
*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/freeway.sumo.cfg"

##########################################################
#                   Common parameters                    #
##########################################################
#**.numberOfCars = ${nCars = 8}
#**.numberOfCarsPerPlatoon = ${platoonSize = 8}
**.numberOfLanes = 1
**.controllerXi = 1
**.controllerOmegaN = 0.2

##########################################################
#                    Position helper                     #
##########################################################

#*.node[*].helper_type = "MyLocalPlatoonPositionHelper"
#*.node[*].helper.nLanes = 1
#*.node[*].helper.platoonSize = 8
#*.node[*].helper.nCars = 8

*.node[*].helper_type = "LocalPlatoonPositionHelper"
*.node[*].helper.nLanes = 1
*.node[*].helper.platoonSize = 4
*.node[*].helper.nCars = 4

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = 0.5 s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false

*.node[*].scenario.useControllerAcceleration = true

#controllers to be tested
#**.numericController = ${controller = 0, 1}
#*.node[*].scenario.controller = ${sController = "ACC", "CACC" ! controller}

#headway for ACCs
*.node[*].scenario.accHeadway = 0.1 s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s
#*.node[*].scenario.leaderHeadway = ${leaderHeadway = 0.3}s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 100}kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "GeneralPlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
#use the join at back implementation of the join maneuver
*.node[*].appl.joinManeuver = "JoinAtBack"

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = 0.1 s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 2}
#packet size for platooning beacon
*.node[*].prot.packetSize = 200
#set to 0 the packet loss rate for the unicast protocol
#*.node[*].unicast.packetLossRate = 0

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "JoinTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph

#insert nCars platooning vehicles
#**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
#**.traffic.platoonSize = ${platoonSize}

#use nLanes lanes
**.traffic.nLanes = 1
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#insert vehicles already at steady-state. distance depends on controller
#**.traffic.platoonInsertDistance = 5 m
#**.traffic.platoonInsertHeadway = 0 s
#**.traffic.platoonLeaderHeadway = ${leaderHeadway}s


#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false


[Config MyJoinManeuver]

repeat = 1
*.manager.useGui = true

**.traffic.nCars = ${nCars = 1}
**.traffic.platoonSize = 4

#scenario parameters
*.node[*].scenario_type = "MyJoinManeuverScenario"

*.node[*].scenario.nCars = ${nCars}

#**.numericController = ${controller = 0, 1, 2, 3}
#*.node[*].scenario.controller = ${sController = "ACC", "CACC", "PLOEG", "CONSENSUS" ! controller}
#*.node[*].appl.controller = ${sController}
#**.headway = ${headway = 0.3, 0.1, 0.1, 0.1 ! controller}s
#**.traffic.platoonInsertDistance = ${2, 5, 2, 15 ! controller}m
#**.traffic.platoonInsertHeadway = ${0.3, 0, 0.5, 0.8 ! controller}s

**.numericController = ${controller = 0}
*.node[*].scenario.controller = ${sController = "ACC"}
*.node[*].appl.controller = ${sController}
**.traffic.platoonInsertDistance = 2 m
**.traffic.platoonInsertHeadway = 0.3 s
**.headway = ${headway = 0.3}s

#**.numericController = ${controller = 1}
#*.node[*].scenario.controller = ${sController = "CACC"}
#*.node[*].appl.controller = ${sController}
#**.traffic.platoonInsertDistance = 5 m
#**.traffic.platoonInsertHeadway = 0 s
#**.headway = ${headway = 0.1}s

#**.numericController = ${controller = 2, 3}
#*.node[*].scenario.controller = ${sController = "PLOEG", "CONSENSUS" ! controller}
#*.node[*].appl.controller = ${sController}
#**.traffic.platoonInsertDistance = ${2, 15 ! controller} m
#**.traffic.platoonInsertHeadway = ${0.5, 0.8 ! controller} s
#**.headway = ${headway = 0.1}s

*.node[*].scenario.useSinusoidalDisturbance = true
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.oscillationAmplitude = ${oscillationAmp = 35} kmph
*.node[*].scenario.startOscillating = 55 s
*.node[*].scenario.stopOscillating = 100 s

*.node[*].scenario.useBrakingDisturbance = false
*.node[*].scenario.startBraking = 55 s
*.node[*].scenario.brakingDeceleration = 8 mpsps

*.node[*].scenario.useRealisticEngine = false
*.node[*].scenario.engineTau = ${actDelay = 0.5}s
*.**.nic.phy80211p.thermalNoise = ${thermalNoise = -95}dBm
*.**.nic.mac1609_4.txPower = ${txPower = 100}mW
*.**.nic.phy80211p.maxTXPower = ${txPower}mW
*.node[*].unicast.packetLossRate = ${packetLossRate = 0}

output-vector-file = ${resultdir}/${configname}_${controller}_${packetLossRate}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${packetLossRate}.sca

[Config MyJoinManeuverPLoss]

repeat = 1
*.manager.useGui = true

**.traffic.nCars = ${nCars = 8}
**.traffic.platoonSize = ${nCars}

#scenario parameters
*.node[*].scenario_type = "MyJoinManeuverScenario"

*.node[*].scenario.nCars = ${nCars}

**.numericController = ${controller = 1}
*.node[*].scenario.controller = ${sController = "CACC" ! controller}
**.traffic.platoonInsertDistance = 5 m
**.traffic.platoonInsertHeadway = 0 s

**.traffic.platoonLeaderHeadway = ${leaderHeadway}s

*.node[*].scenario.useSinusoidalDisturbance = true
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.oscillationAmplitude = ${oscillationAmp = 35} kmph
*.node[*].scenario.startOscillating = 55 s
*.node[*].scenario.stopOscillating = 100 s

*.node[*].scenario.useBrakingDisturbance = false
*.node[*].scenario.startBraking = 0 s
*.node[*].scenario.brakingDeceleration = 8 mpsps

*.node[*].unicast.packetLossRate = ${pLoss = 0.1, 0.2, 0.3, 0.4}

output-vector-file = ${resultdir}/${configname}_${controller}_${pLoss}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${pLoss}_${repetition}.sca

[Config MyJoinManeuverBraking]

repeat = 1
*.manager.useGui = true

**.traffic.nCars = ${nCars = 8}
**.traffic.platoonSize = ${nCars}

#scenario parameters
*.node[*].scenario_type = "MyJoinManeuverScenario"

*.node[*].scenario.nCars = ${nCars}

*.node[*].scenario.useSinusoidalDisturbance = false
#*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
#*.node[*].scenario.oscillationAmplitude = ${oscillationAmp = 35} kmph
#*.node[*].scenario.startOscillating = 55 s
#*.node[*].scenario.stopOscillating = 80 s

*.node[*].scenario.useBrakingDisturbance = true
*.node[*].scenario.startBraking = 75 s
*.node[*].scenario.brakingDeceleration = 8 mpsps

*.node[*].unicast.packetLossRate = 0

output-vector-file = ${resultdir}/${configname}_${controller}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${repetition}.sca

[Config MyJoinManeuverNoGui]
extends = MyJoinManeuver
*.manager.useGui = false
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/MyJoinManeuver_${controller}_${packetLossRate}.vec
output-scalar-file = ${resultdir}/MyJoinManeuver_${controller}_${packetLossRate}.sca

[Config MyJoinManeuverPLossNoGui]
extends = MyJoinManeuverPLoss
*.manager.useGui = false
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/MyJoinManeuverPLoss_${controller}_${pLoss}_${repetition}.vec
output-scalar-file = ${resultdir}/MyJoinManeuverPLoss_${controller}_${pLoss}_${repetition}.sca

[Config MyJoinManeuverBrakingNoGui]
extends = MyJoinManeuverBraking
*.manager.useGui = false
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/MyJoinManeuverBraking_${controller}_${repetition}.vec
output-scalar-file = ${resultdir}/MyJoinManeuverBraking_${controller}_${repetition}.sca
